מדריך לאבטחת יוניקס
===================

נכתב על ידי: Kript0n
תורגם לעברית על ידי: TCL

-------------
1) מבוא לטקסט
-------------

אבטחה ביוניקס היא נושא קשה. זה אומר שלעולם לא תוכל לצפות שהמחשב שלך הוא בלתי ניתן לפריצה לחלוטין. לעומת זאת יש מספר דברים שאתה יכול לעשות כדי שהמערכת תהיה בטוחה יותר. הקובץ הזה מנסה להסביר טכניקות להגנה על יוניקס ושימוש בטוח בה.

---------------
2) ענייני אבטחה
---------------

רוב הסיכויים הם שהדבר הראשון שמנהל מערכת צריך להתמודד איתו הוא תהליך ההתקנה. קודם כל באה השאלה של איזו הפצה של יוניקס כדי לבחור.

לכל הפצה יש יתרונות משלה וחסרונות משלה. חלק מההפצות של לינוקס "יחזירו לחיים" מחשבי 486 שיעבדו בתור תחנות עבודה קטנות או שרתים קטנים, אבל רוב ההפצות של לינוקס ימלאו את הדיסק הקשיח שלך בתוכנות שלא תצטרך. אם אתה הולך על לינוקס אני ממליץ להשתמש בהפצה Slackware.

כמו כן, לדעת את "תפקידו" של המחשב שלך יעזור בבחירת ההפצה. למשל, OpenBSD תהיה מערכת הפעלה יציבה שכמעט לעולם לא תתרסק. FreeBSD טובה אם אתה מתכנן לעשות אתר שיקבל כמות גדולה של מידע (כמו יאהו) או אם אתה צריך מערכת מהירה ויציבה. NetBSD תספק לך מערכת קטנה, יציבה ומהירה, וטובה במיוחד אם אתה צריך לנהל רשתות גדולות עם סוגים שונים של מערכות הפעלה. אם אתה מתכוון לעבוד הרבה בגרפיקה (ואני לא מתכוון לשטויות של פוטושופ) אתה צריך לשקול להשיג תחנת עבודה של SGI וגם IRIX. אם אתה הולך להשתמש הרבה במאגרי נתונים (בעיקר של אורקל) אתה צריך להשיג Solaris ו - SPARC.

בתהליך ההתקנה תתקין רק את הדברים הבסיסיים. אל תתקין דברים כי הם נראים "מועילים" או נשמעים כאלה. תתקין משהו רק אחרי שקראת עליו הרבה, אחרי שאתה מבין בדיוק מה הוא עושה, איך הוא עובד וכשאתה יודע איך להגדיר אותו כמו שצריך. הרבה פריצות נעשות על ידי ניצול של חור אבטחה בתוכנה שמנהל המערכת לא השתמש בה או שכח לגמרי שהוא התקין אותה (כי הוא לא צריך אותה, הוא פשוט התקין אותה).

---------------------
2.1) צעדי קדם - התקנה
---------------------

אחרי שאתה יודע מה "התפקיד" של המחשב ואחרי שהתקנת רק את הבסיס, ואני מתכוון _רק_ הבסיס כדי ליצור מערכת בטוחה ויעילה, הגיע הזמן להתקין את החבילות שיעזרו לו לבצע את תפקידו. אם זה הולך להיות שרת אינטרנט תתקין את Apache או שרת WWW טוב אחר ותלמד איך להגדיר אותו טוב.

אם זה הולך להיות שרת דואר תתקין שרת שאתה בוטח בו. זה יכול להיות procmail, qmail וגם 
sendmail (גירסה 8.9.3 בלבד), או כל דבר אחר. אל תשכח להגדיר את זה וללמוד להשתמש בזה _לפני_ שאתה משתמש בזה.

אם זה הולך להיות שרת של מאגרי נתונים תתקין את תוכנה שלך למאגר הנתונים ותגדיר אותה טוב וכן הלאה. אל תשכח - הגדרה לא נכונה היא האויב שלך.

תהיה בטוח שאתה מתקין רק מה שאתה צריך. אף פעם אל תתקין תוכנות "אקסטרה". אם אתה כן עושה זאת, תבדוק שאתה יודע להשתמש בה ושהיא באה עם קוד מקור בטוח. אף פעם אל תשכח להגדיר תוכנה לפני השימוש בה.

צעד האבטחה הזה של "להתקין רק מה שאתה צריך" הוא חלק מהתפיסה של "אתה מחליט מה עובר ומה לא" . זה מתחיל עם ההתקנה, ממשיך עם ההגדרות וכנראה מסתיים עם פייוואל (Firewall) טוב.

אבל גם אחרי שאתה מתקין רק מה שאתה צריך ומגדיר את הכל, המחשב שלך לא בטוח עדיין...

-------------------
2.1.1) מה זה inetd?
-------------------

ברוב המדריכים הכותב ממליץ להפסיק את הפעולה (על ידי הוספת הסימן "#" בהתחלה של כל שורה) שירותים שאתה לא צריך. פה אנחנו עושים צעד אחד קדימה כדי לסגור בכלל את inetd. הבעיה היא ש - inetd מתחיל שירותים שב-99% מהמקרים אנחנו לא צריכים. כמו שירותי RPC שהם לא בטיחותיים, טלנט - שבו לא צריך להשתמש עכשיו שיש לנו את OpenSSH (טלנט לא מצפין את המידע שמועבר וזהו חור בטיחותי), FTP - שאפשר להתחיל על ידי הרצה של הפקודה 'ftpd -D, (או אם -USD אם אתה רוצה לוגים של כל ההורדות והפעולות) וכו'.

על ידי הכיבוי של inetd והבחירה של מה שהוא יריץ אתה משיג שליטה מקסימלית על השירותים של המחשב שלך כי _אתה_ מחליט מה יעלה ומה לא. אני מוצא את זה נוח להוסיף פקודות לקובץ etc/rc.conf/ (אם אתה משתמש ב - init שהוא בסגנון BSD) וגם הוספת פקודות ל - etc/rc/, ככה אתה משיג שליטה על מצבי ההרצה של השירותים. אם אתה משתמש במערכת בסגנון SYSV פשוט תוסיף (או תמחק) פקודות מקבצי ה- rc (ככל שאני זוכר הם נמצאים תחת etc/rc/rc.inet1 ו - etc/rc/rc.inet/ בהפצות של Slackware, אין לי גישה למערכות אחרות). 

זה קל להוסיף פקודות לקבצים. הנה דוגמאות למערכות בסגנון BSD וגם SYSV (פה גרמתי לתוכנה SNORT לעלות שמדליקית את המחשב):

(BSD)

etc/rc.conf/
snort="-A full -c /etc/snort.rules -d -D -s -i -ep0 -e -s" #use NO to disable

etc/rc/
if ["X${snort}" != X"NO" ]; then
 echo 'starting snort' ; /usr/local/bin/snort $snort

(במקרה הזה אם המשתנה "snort" שנמצא תחת etc/rc.conf/ מכוון לערך NO, אז snort לא תרוץ. אם לא הוא מניחשהערך הוא "הדגלים" שצריכים לרוץ עם התוכנה)

(SYSV)

etc/rc.d/rc.inet/:
echo "starting snort" ; /usr/local/bin/snort -A full -c /etc/snort.rules -d -D -s -i -ep0 -e -s

(פה אנחנו פשוט אומרים למחשב לכתוב שהוא טוען את snort ואז לטעון אותה. אפשר להוסיף את זה לשורה "starting deamons: ... " אבל זה ייקח יותר מקום במדריך וזה לא הנושא שאנחנו מדברים עליו)

בכל מקרה, זה דיי קל להוסיף פקודות לקבצי ה - init. תקרא את המדריך לשירותים שאתה רוצה להפעיל כדי לדעת באילו "דגלים" להשתמש.

כמובן שאם אתה רוצה להשאיר את inetd רץ פשוט תסמן כהערה כל דבר שאתה לא צריך ותתחיל את inetd מחדש ככה:

killall -1 inetd

אם למערכת שלך אין את הפקודה הזאת תשתמש בפקודה 'ps -x| grep inetd' ותכתוב את המספר של ה- PID ואז תריץ את הפקודה הבאה אחרי שתחליף את PID עם המספר שכתבת:

kill -1 PID

---------------------
2.1.2) השימוש ב- nmap
---------------------

(אפשר להוריד את nmap מהאתר www.insecure.org/nmap)

nmap הוא כלי לחקירת רשתות וסורק אבטחה. זה אומר שהוא סורק מחשב או מספר מחשבים בשביל למצוא פורטיפ פתוחים עליהם. אחרי שסיימת לערוך את קבצי ה - init תפעיל את nmap בפקודה הבאה:

nmap -sT -sU -P0 127.0.0.1

אתה צריך לנתח את הפלט של התוכנה כדי לחפש פורטים בלתי רצויים. הפלט יראה בערך ככה:

...
interesting ports on localhost (127.0.0.1):
(The 1520 ports scanned but not shown below are in state: closed)

Port		State		Service
25/tcp		open		smtp
80/tcp		open		http
113/tcp		open		auth

בוא נראה. פה אתה יכול לראות כמה שירותים פתוחים כמו telnet, http ו - auth. במחשב שלך יכולים להיות הרבה יותר אבל אם ערכת את הקבצים טוב לא יהיו הרבה. 
בוא ננתח את אחת השורות:

25/tcp		open		telnet

הטור הראשון הוא הפורט שבו רץ השירות (25 במקרה הזה). אתה גם יכול לראות שאותו פורט הוא פתוח (הטור השני). הטור השלישי אומר איזה שירות רץ על אותו פורט (זה לא בטוח לגמרי. אצלי פורט 23 הוא בשביל OpenSSH אבל nmap אומר שזה telnet). זה אומר שיש לי שרת דואר שמחכה לפקודות בפורט 25. אתה יכול לבדוק את זה על ידי ביצוע טלנט לפורט הזה: 

telnet localhost smtp

אתה יכול להלחיף את smtp במספר האמיתי של הפורט (25 במקרה הזה). אתה תראה שהחיבור התקבל. עכשיו לחלק המסובך, אם המחשב שלך מריץ שירות שאתה לא רוצה ושלא מקשיב לך הוא יכול להיפרץ בגלל חוסר תשומת לב ועידכונים. זוהי הסיבה ששירותים שלא משתמשים בהם צריכים להיות סגורים (כמו שציינתי בהתחלה). 

תזכור... אם יש לך שירות שאתה לא צריך ושלא תשתמש בו _תסגור_אותו_.
תסמן את השורה שמריצה אותו כהערה כמו שהוסבר למעלה.

---------------
2.1.3) הסיסמאות
---------------

הסיסמאות במערכת יוניקס הן חיוניות כדי להבטיח שלא תהיה גישה לאנשים לא רצויים. בחירה גרועה של סיסמה יכולה לסכן את כל המחשב שלך ובמקרים גרועים , את כל הרשת שלך. אז בוא נראה איך סיסמה טובה נוצרת:

חוקים:
* לעולם אל תשתמש במילים מהמילון
* לעולם אל תשתמש רק באותיות תחתונות
* תנסה לשלב אותיות תחתונות, עליונות וגם סמלים
* אל תשתמש בסיסמאות קצרות. לפחות באורך 6 תווים

אז מהי סיסמה טובה ומהי סיסמה רעה?
סיסמה טובה - iNt3rN4ti0nAl
סיסמה רעה - milk
סיסמה נוראה - root
סיסמה איומה - aaa (*)

(*) סיסמה כזאתי אפשר לפצח בפחות מחמש דקות אז אם אתה משתמש בסיסמה כזאת... לך תחפש את החברים שלך... או שתשנה אותה, עכשיו! כמובן שסיסמה לקובץ הסיסמאות המוחבא אפשרית רק למשתמש העל ואם למישהו יש כזאת גישה למחשב שלך שינוי הסיסמה הוא רק טיפה באוקינוס. ל - CERT יש מדריך טוב לשיקום אחרי שמישהו פרץ כמשתמש על. אני מציע שתקרא אותו. (www.cert.org)

שאלה שצצה בדרך כלל היא איך לבדוק אם הסיסמה שלך היא טובה או רעה. אחת הדרכים הפשוטות היא להשתמש בתוכנה vpass שבודקת אם הסיסמה היא קלה לפיצוח או לא.

------------------------
2.1.3.1) השימוש ב- vpass
------------------------

מה שהתוכנה הזו עושה זה להגיד לך אם הסיסמה שאתה משתמש בה טובה או לא. בוא נראה כמה דוגמאות:

echo "guest guest" | vpass
ERRNO 3 : do not use your username as a password

echo "guest l33t | vpass
ERRNO 5 : unsuitable password because its too short

echo "quest h4x0rZ" | vpass
OK

אני חושב שאפשר להבין את הדוגמאות האלה לבד אבל בואו נראה את השימוש בתוכנה. התוכנה הזו משווה צירופים של שם משתמש \ סיסמה אלא אם הדגל u- ניתן לה. קח את הדוגמה השנייה כדוגמה. echo "guest leet" |pass. הפקודה echo שולחת ל- vpass את הצירוף כדי שהיא תוכל לבדוק אותו. זאת אומרת ש- guest הוא שם המשתמש ו- l33t היא הסיסמה. לא כל כך קשה להבנה נכון?

----------------------
2.1.3.2) שינוי סיסמאות
----------------------

כדי להעלות את רמת האבטחה של המחשב שלך תבקש מהמשתמשים לשנות את הסיסמה שלהם בקביעות. בשביל רמה גבוהה של אבטחוה הם צריכים להחליף סיסמה כל 6 שבועות. פעם בכל שלושה חודשים זה ממש חובה. הסיסמאות של משתמש העל צריכות להשתנות פעם בחודש או כאשר אדם שיודע את הסיסמה עוזב את החברה. הרבה פריצות נעשות על ידי ניחוש סיסמה של משתמש רגיל (לעיתים נקרא social engineering). אתה צריך לבדוק שהמשתמשים לא משתמשים בשמות עצם, שמות, שם המשתמש שלהם, ושאר פרטים שאדם יוכל לנחש רק עם מעט מידע על המשתמש. רוב המערכות המודרניות בודקות את הסיסמה של המשתמש ולא נותנים לו להכניס סיסמה גרועה מדי.

-----------
2.4) יומנים
-----------

עשיית מערכת יומנים טובה ויעילה היא חיונים כדי שאתה תדע מה קורה במערכת שלך, מה הן הבעיות ואיפה הן נמצאות.

כמעט כל תוכנת שרת ליוניקס באה עם יכולות לשמירת יומנים אז שים לב שאתה יודע לאן כל יומן הולך. אתה יכול לדאוג שכל היומנים ילכו למקום אחד (אני ממליץ על var/log/). תדע את המבנה של כל יומן ותלמד להבין אותו. חלק מהתוכניות מאפשרות לך לערוך את מבנה היומן - תערוך אותו.

רוב התוכניות משתמשות ב- syslogd כמרכז היומנים או שלפחות יש להן את האפשרות לעשות את זה. קובץ etc/syslog.conf/ (הקובץ ששולט במיון היומנים) בסיסי יראה ככה:

etc/syslog.conf/:
auth.*      /var/log/auth.log
cron.*     /var/log/cron.log
deamon.*      /var/log/deamon.log
kern.*      /var/logkernel.log
mail.*    /var/log/mail.log
mark.*     /var/log/mark.log
syslog.*      /var/log/syslog.log
user.*     /var/log/user.log

ניתוח הקובץ: אתה יכול לראות שהיומנים נשמרים על השמות של מה שהם מכילים. לדעתי זוהי מדיניות טובה כי ככה אתה יודע איפה לחפש מה. כמובן שזה מאוד בסיסי. לשירותים אחרים יש מערכות משלהם ליומנים או שמות אחרים בשבילהם. פשוט תקרא את המדריך של התוכנה שלך.

--------------
2.5) אבטחת tty
--------------
כמו שאתה בטח יודע אתה יכול להתחבר מרחוק למערכות יוניקס. כמו כן יש משתמש על , שלרוב נקרא root, שיש לו גישה לכל קובץ ותיקיה. פעם, אם הייתה הסיסמה של משתמש העל יכולת להתחבר מרחוק למערכת ולהשתלט עליה. היום יש משהו שחוצץ בינך לבין המעשה הזה או לפחות משהו שמונע ממך להפוך למשתמש העל במספר מכשירים. זה טוב אם אתה רוצה שמשתמש העל יוכל לעבוד רק אם הוא משתמש במחשב פיזית, אז במקרים כאלה אתה פשוט רושם את ה- tty שאתה רוצה שהוא יוכל לעבוד עליהם. הקובץ ששולט על זה הוא או etc/ttys/ או etc/scuretty/. בדרך כלל יש להם הסבר קטן בהתחלת הקובץ. למטה יש דוגמאות לשני הקבצים האלו:

etc/securetty/:
restricts root access to local users#
tty1
tty2
tty3
tty4
tty5
tty6
end of /etc/securetty #

etc/ttys/:
this is a secure tty #
ttyC0 "/usr/libexec/getty Pc"    vt220 on secure
this is an insecuretty: #
ttyp0   none        network

במחשבים שלי, כמו שאתה יכול לראות, רק משתמשים פיזיים יכולים להתחבר כמשתמש העל. זאת אומרת שאין יותר משתמש על ממקומות אחרים בעולם. זאת אומרת שגם אם למישהו יש את הסיסמה של משתמש העל הוא לא יכול לעשות איתה כלום אלא אם יש לו חשבון מקומי על אותו מחשב. כמובן שאנחנו נעשה את המערכת אפילו יותר בטוחה ככה שאפילו אם למישהו מקומי יש את סיסמת משתמש העל הוא לא יכול עשות איתה כלום. :^)

אם אין לך מושג מה זה tty ואיזה מהם בטוחים ואיזה מהם לא תשאיר את זה כברירת המחדל של המחשב שלך ותקווה לטוב ביותר.

-----
3) su
-----

התוכנית הזאת מאפשרת למשתמשים להתנהג כמשתמשים אחרים, או, אם אף משתמש אחר לא ניתן כפרמטר, כמשתמש העל. בדרך כלל אין סיבה שמשתמש אחד ירצה להתנהג כמו השני כך שאני לא מבין למה משתמשים אחרים צריכים גישה לתוכנית הזאת. אם אתה כן רוצה להתשתמש בה, תקרא את המדריך שלה לפני זה.

----------------------
4) סיום וצעדים אחרונים
----------------------

אחרי שעשית את מה שנאמר לך לעשות המערכת שלך תהיה הרבה יותר בטוחה. לעומת זאת זה לוקח סבלנות להיות מנהל מערכת טוב. אל תתקין כל מה שאתה מוצא כי אתה תפתח חורי אבטחה כמו שכבר אמרתי. תמשיך לשנות את הסיסמה שלך באופן קבוע ותבדוק את היומנים של המערכת שלך בקביעות. והדבר הכי חשוב הוא לעדכן את המערכת שלך כמה שיותר פעמים. רק כדוגמה, אני מעדכן את המערכת שלי כל 3 ימים. פראנויה? אולי. בטיחותי? כן!
